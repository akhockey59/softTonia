Product Variants with Dynamic Pricing API Documentation
Overview
This API allows you to manage products with multiple variants (e.g., color and size) and dynamic pricing based on the selected variant. The backend is built with Node.js and Express, uses MongoDB for data storage, and (if extended) can be secured with JWT authentication. For now, the endpoints are open for testing purposes.

Base URL
For local development, the API is hosted at:
http://localhost:3000

Endpoints
1. Create a New Product with Variants
Endpoint: POST /products

Description:
Creates a new product with details such as name, description, base price, discount, image URL, and an array of variants. Each variant contains attributes like type (e.g., size, color), value, and its dynamic price.
2. Update a Product's Variants
Endpoint: PUT /products/:id

Description:
Updates the variants for an existing product. You can modify variant details such as type, value, and pricing.

3. Fetch Product Details Including All Variants
Endpoint: GET /products/:id

Description:
Retrieves the full details of a product, including all its variants and dynamic pricing.


Setup & Running the Application
Clone the Repository:

bash
Copy
Edit
git clone <repository_url>
cd <repository_directory>
Install Dependencies:

bash
Copy
Edit
npm install
Set Up Environment Variables: Create a .env file at the root of the project with the following variables:

env
Copy
Edit
PORT=3000
MONGODB_URI=mongodb+srv://<username>:<password>@<cluster-address>/<database_name>?retryWrites=true&w=majority
JWT_SECRET=your_jwt_secret  // For future use when implementing JWT
Start the Server:

bash
Copy
Edit
npm start
The server should run on http://localhost:3000.

Additional Notes
Authentication:
Although the requirements specify JWT authentication to protect the endpoints, it has not yet been implemented. Currently, all endpoints are open for testing. In future iterations, authentication will be added, and requests will require a valid JWT token in the Authorization header.

Error Handling:
The API includes basic error responses. In a production environment, consider enhancing error handling and adding proper logging.

Testing:
Use tools like Postman or cURL to interact with the API endpoints.

This documentation provides a clear guide for developers on how to use the API endpoints for managing product variants with dynamic pricing. Adjust the examples as needed based on your actual implementation.



I have not implemented the JWT authentication cause i have used it with login and signup and here as my task assigner said you dont need to setup authentication so i left it.



